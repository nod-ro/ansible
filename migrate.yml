- hosts: localhost
  become: yes
  vars_files:
    - environment.yml
  pre_tasks:
    - name: Confirmation prompt
      pause:
        prompt: "Aceasta operatiune este foarte delicata si presupune aducerea de fisiere si baza de date din productie in environment ansible si actualizarea modulelor. Sunteti sigur? (DA/NU)"
      register: confirmation_response

    - name: Check response
      fail:
        msg: "Aborted by user."
      when: confirmation_response.user_input | lower != 'da'

    - name: Ensure main utils directory exists
      ansible.builtin.file:
        path: /var/ansible/utils
        state: directory
        mode: '0755'  # Set the permissions (optional)

    - name: Ensure SSH key is added to SSH agent
      shell: |
        eval $(ssh-agent -s)
        ssh-add /tmp/private_key
        echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK"
      register: ssh_agent_output
      ignore_errors: yes

    - name: Debug SSH agent output
      debug:
        var: ssh_agent_output.stdout_lines

    - name: Set environment variables for SSH agent
      set_fact:
        ssh_agent_socket: "{{ ssh_agent_output.stdout_lines[1].split('=')[1] }}"
        ssh_agent_pid: "{{ ssh_agent_output.stdout_lines[0].split(' ')[2] }}"
      when: ssh_agent_output is defined and ssh_agent_output.stdout_lines is defined and ssh_agent_output.stdout_lines | length > 1

  tasks:
    - name: Temporary disable NE to avoid fatal errors [save template as PHP file]
      template:
        src: php_mysqli.php.j2  # Modify this path if needed
        dest: "/var/ansible/utils/php_mysqli.php"


    - name: Temporary disable NE to avoid fatal errors [execute]
      command: php /var/ansible/utils/php_mysqli.php
      args:
        chdir: "{{ web_root }}/{{ development_domain }}"

    - name: Upgrade and conditionally activate WooCommerce public plugins
      command: wp plugin install {{ item.name }} --version={{ item.version }} --path={{ web_root }}/{{ development_domain }} --allow-root --force
      with_items: "{{ public_plugins }}"

    - name: Activate plugins where activate is true
      command: wp plugin activate {{ item.name }} --path={{ web_root }}/{{ development_domain }} --allow-root
      when: item.activate
      with_items: "{{ public_plugins }}"

    - name: Clone or update the plugin repositories from private repos
      git:
        repo: "{{ item.item.repo }}"
        dest: "{{ web_root }}/{{ development_domain }}/wp-content/plugins/{{ item.item.name }}"
        force: yes
        version: "{{ item.item.version }}"
        accept_hostkey: yes
      loop: "{{ plugin_directory_contents.results }}"
      become: yes
      become_user: root
      ignore_errors: yes
      environment:
        SSH_AUTH_SOCK: "{{ ssh_agent_socket }}"
        SSH_AGENT_PID: "{{ ssh_agent_pid }}"

    - name: Activate plugins where "activate" property is true
      command: wp plugin activate {{ item.name }} --allow-root
      args:
        chdir: "{{ web_root }}/{{ development_domain }}"
      when: item.activate
      loop: "{{ plugins }}"
      become: yes
      become_user: root
